package bitOperation;

public class main {
    public static void main(String[] args) {
        /**
         * 位运算符 &,|,^,~
         * 进行位运算符操作时，一定要先把数据转换成二进制，以补码的格式进行运算
         * */
        /**
         * 3的二进制：11
         * 00000000 00000000 00000000 00000011
         * 4的二进制：100
         * 00000000 00000000 00000000 00000100
         * &位与运算，有0则0
         * 00000000 00000000 00000000 00000011
         * &
         * 00000000 00000000 00000000 00000100
         * -----------------------------------
         * 00000000 00000000 00000000 00000000
         * 结果：0
         * |位或运算，有1则1
         * 00000000 00000000 00000000 00000011
         * |
         * 00000000 00000000 00000000 00000100
         * -----------------------------------
         * 00000000 00000000 00000000 00000111
         * 结果：7
         * ^位异或运算，相同则0，不同则1
         * 00000000 00000000 00000000 00000011
         *^
         * 00000000 00000000 00000000 00000100
         * -----------------------------------
         * 00000000 00000000 00000000 00000111
         * 结果：7
         * ~按位取反运算：0变1，1变0
         * ~00000000 00000000 00000000 00000011
         *  11111111 11111111 11111111 11111100（补码）
         *  反码：11111111 11111111 11111111 11111011
         *  原码：10000000 00000000 00000000 00000100
         *  结果：-4
         * */
        System.out.println(3 & 4);
        System.out.println(3 | 4);
        System.out.println(3 ^ 4);
        System.out.println(~3);
    }
}
